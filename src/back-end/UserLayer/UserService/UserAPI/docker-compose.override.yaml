services:
  user_api:
    ports:
      - '5055:8080'
    environment:
      # ASP.NET Core
      ASPNETCORE_ENVIRONMENT: Development

      # MSSQL
      ConnectionStrings__DefaultConnection: Server=user_mssql,1433;Database=UserDb;User Id=sa;Password=MyPass@word;TrustServerCertificate=True

      # JWT
      Jwt__Issuer: http://stls_backend:8080
      Jwt__Audience: http://stls_backend:8080
      Jwt__Key: Nn7kLa8Rzv1XHt9UwMqP4YbFdJxVt2Km

      # RabbitMQ connection
      RabbitMQ__Host: rabbitmq
      RabbitMQ__Port: 5672
      RabbitMQ__Username: rabbitmq
      RabbitMQ__Password: rabbitmq123

      # Exchanges
      RabbitMQ__Exchanges__Logs: LOG.EXCHANGE
      RabbitMQ__Exchanges__User: USER.EXCHANGE
      RabbitMQ__Exchanges__Traffic: TRAFFIC.EXCHANGE

      # Publish to ...
      ## User Exchange
      RabbitMQ__RoutingKeys__NotificationRequest: user.notification.request
      ## Traffic Exchange
      RabbitMQ__RoutingKeys__LightControl: traffic.light.control.{intersection_id}.{light_id}
      RabbitMQ__RoutingKeys__LightUpdate: traffic.light.update.{intersection_id}
      ## Log Exchange
      RabbitMQ__RoutingKeys__Audit: log.user.user_service.audit
      RabbitMQ__RoutingKeys__Error: log.user.user_service.error

      # Consume from ...
      ## User Exchange
      RabbitMQ__Queues__User: user.user_service.queue
      RabbitMQ__RoutingKeys__NotificationAlert: user.notification.alert
      RabbitMQ__RoutingKeys__NotificationPublic: notification.event.public_notice
      ## Traffic Exchange
      RabbitMQ__Queues__Traffic: traffic.user_service.queue
      RabbitMQ__RoutingKeys__TrafficCongestion: traffic.analytics.congestion.{intersection_id}
      RabbitMQ__RoutingKeys__TrafficSummary: traffic.analytics.summary.{intersection_id}
      RabbitMQ__RoutingKeys__TrafficIncident: traffic.analytics.incident.{intersection_id}

    depends_on:
      user_mssql:
        condition: service_started
    restart: always
