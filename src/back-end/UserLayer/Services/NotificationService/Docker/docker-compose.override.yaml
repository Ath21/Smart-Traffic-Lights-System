services:
  notification_api:
    ports:
      - '5087:8080'
    environment:
      # ===============================
      # ASP.NET Core
      # ===============================
      ASPNETCORE_ENVIRONMENT: Development

      # ===============================
      # Databases
      # ===============================

      ## NotificationDB (MongoDB)
      Mongo__ConnectionString: mongodb://mongo:mongo123@notification_mongo:27017
      Mongo__Database: NotificationDB
      Mongo__NotificationsCollection: notifications
      Mongo__DeliveryLogsCollection: delivery_logs

      # ===============================
      # CORS Policy
      # ===============================
      Cors__AllowedOrigins: http://localhost:5173
      Cors__AllowedMethods: GET,POST,PUT,PATCH,DELETE
      Cors__AllowedHeaders: Content-Type,Authorization

      # ===============================
      # JWT Authentication
      # ===============================
      Jwt__Issuer: http://stls_backend:8080
      Jwt__Audience: http://stls_backend:8080
      Jwt__Key: Nn7kLa8Rzv1XHt9UwMqP4YbFdJxVt2Km

      # ===============================
      # Email Settings
      # ===============================
      Email__SmtpServer: smtp.gmail.com
      Email__Port: 587
      Email__SenderName: UNIWA STLS
      Email__SenderEmail: ice19390005@gmail.com
      Email__Username: ice19390005@gmail.com
      Email__Password: waqr ilfj fxpu banq

      # ===============================
      # RabbitMQ Connection
      # ===============================
      RabbitMQ__Host: rabbitmq
      RabbitMQ__Port: 5672
      RabbitMQ__Username: rabbitmq
      RabbitMQ__Password: rabbitmq123

      # ===============================
      # RabbitMQ Exchanges
      # ===============================

      ## USER.EXCHANGE
      RabbitMQ__Exchanges__User: USER.EXCHANGE
      # --- Publish
      RabbitMQ__RoutingKeys__User__NotificationAlert: user.notification.alert
      RabbitMQ__RoutingKeys__User__NotificationPublic: notification.event.public_notice
      # --- Consume
      RabbitMQ__Queues__User__Requests: requests.notification.queue
      RabbitMQ__RoutingKeys__User__NotificationRequest: user.notification.request

      ## TRAFFIC.EXCHANGE
      RabbitMQ__Exchanges__Traffic: TRAFFIC.EXCHANGE
      # --- Consume
      RabbitMQ__Queues__Traffic__Analytics: traffic.analytics.notification.queue
      RabbitMQ__RoutingKeys__Traffic__Congestion: traffic.analytics.congestion.{intersection_id}
      RabbitMQ__RoutingKeys__Traffic__Summary: traffic.analytics.summary.{intersection_id}
      RabbitMQ__RoutingKeys__Traffic__Incident: traffic.analytics.incident.{intersection_id}

      ## LOG.EXCHANGE
      RabbitMQ__Exchanges__Log: LOG.EXCHANGE
      # --- Publish
      RabbitMQ__RoutingKeys__Log__Audit: log.user.notification_service.audit
      RabbitMQ__RoutingKeys__Log__Error: log.user.notification_service.error

    depends_on:
      notification_mongo:
        condition: service_started
    restart: always
