apiVersion: apps/v1
kind: Deployment
metadata:
  name: log-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: log-api
  template:
    metadata:
      labels:
        app: log-api
    spec:
      containers:
      - name: log-api
        image: ath21/stls:log_api
        ports:
        - containerPort: 8080
        env:
        # ASP.NET
        - name: ASPNETCORE_ENVIRONMENT
          value: "Development"

        # MongoDB
        - name: Mongo__ConnectionString
          value: "mongodb://$(MONGO_ROOT_USERNAME):$(MONGO_ROOT_PASSWORD)@logdb:27017"
        - name: Mongo__Database
          value: "LogDB"
        - name: Mongo__AuditLogsCollection
          value: "audit_logs"
        - name: Mongo__ErrorLogsCollection
          value: "error_logs"
        - name: MONGO_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: logdb-secret
              key: MONGO_ROOT_USERNAME
        - name: MONGO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: logdb-secret
              key: MONGO_ROOT_PASSWORD

        # JWT
        - name: Jwt__Issuer
          value: "http://stls_backend:8080"
        - name: Jwt__Audience
          value: "http://stls_backend:8080"
        - name: Jwt__Key
          valueFrom:
            secretKeyRef:
              name: logapi-secret
              key: JWT_KEY

        # CORS
        - name: Cors__AllowedOrigins
          value: "http://localhost:5173"
        - name: Cors__AllowedMethods
          value: "GET,POST,PUT,PATCH,DELETE"
        - name: Cors__AllowedHeaders
          value: "Content-Type,Authorization"

        # RabbitMQ
        - name: RabbitMQ__Host
          value: "rabbitmq"
        - name: RabbitMQ__Port
          value: "5672"
        - name: RabbitMQ__Username
          valueFrom:
            secretKeyRef:
              name: logapi-secret
              key: RABBITMQ_USERNAME
        - name: RabbitMQ__Password
          valueFrom:
            secretKeyRef:
              name: logapi-secret
              key: RABBITMQ_PASSWORD

        # Exchanges and queues
        - name: RabbitMQ__Exchanges__Log
          value: "LOG.EXCHANGE"

        - name: RabbitMQ__Queues__UserAudit
          value: "log.user_layer.audit.queue"
        - name: RabbitMQ__Queues__TrafficAudit
          value: "log.traffic_layer.audit.queue"
        - name: RabbitMQ__Queues__SensorAudit
          value: "log.sensor_layer.audit.queue"
        - name: RabbitMQ__Queues__UserError
          value: "log.user_layer.error.queue"
        - name: RabbitMQ__Queues__TrafficError
          value: "log.traffic_layer.error.queue"
        - name: RabbitMQ__Queues__SensorError
          value: "log.sensor_layer.error.queue"

        - name: RabbitMQ__RoutingKeys__User__UserServiceAudit
          value: "log.user.user_service.audit"
        - name: RabbitMQ__RoutingKeys__User__NotificationServiceAudit
          value: "log.user.notification_service.audit"
        - name: RabbitMQ__RoutingKeys__User__UserServiceError
          value: "log.user.user_service.error"
        - name: RabbitMQ__RoutingKeys__User__NotificationServiceError
          value: "log.user.notification_service.error"

        - name: RabbitMQ__RoutingKeys__Traffic__AnalyticsAudit
          value: "log.traffic.analytics_service.audit"
        - name: RabbitMQ__RoutingKeys__Traffic__CoordinatorAudit
          value: "log.traffic.coordinator_service.audit"
        - name: RabbitMQ__RoutingKeys__Traffic__IntersectionAudit
          value: "log.traffic.intersection_controller_service.audit"
        - name: RabbitMQ__RoutingKeys__Traffic__LightControllerAudit
          value: "log.traffic.light_controller_service.audit"
        - name: RabbitMQ__RoutingKeys__Traffic__AnalyticsError
          value: "log.traffic.analytics_service.error"
        - name: RabbitMQ__RoutingKeys__Traffic__CoordinatorError
          value: "log.traffic.coordinator_service.error"
        - name: RabbitMQ__RoutingKeys__Traffic__IntersectionError
          value: "log.traffic.intersection_controller_service.error"
        - name: RabbitMQ__RoutingKeys__Traffic__LightControllerError
          value: "log.traffic.light_controller_service.error"

        - name: RabbitMQ__RoutingKeys__Sensor__VehicleAudit
          value: "log.sensor.vehicle_detection_service.audit"
        - name: RabbitMQ__RoutingKeys__Sensor__EmergencyAudit
          value: "log.sensor.emergency_vehicle_detection_service.audit"
        - name: RabbitMQ__RoutingKeys__Sensor__PublicTransportAudit
          value: "log.sensor.public_transport_detection_service.audit"
        - name: RabbitMQ__RoutingKeys__Sensor__PedestrianAudit
          value: "log.sensor.pedestrian_detection_service.audit"
        - name: RabbitMQ__RoutingKeys__Sensor__CyclistAudit
          value: "log.sensor.cyclist_detection_service.audit"
        - name: RabbitMQ__RoutingKeys__Sensor__IncidentAudit
          value: "log.sensor.incident_detection_service.audit"
        - name: RabbitMQ__RoutingKeys__Sensor__VehicleError
          value: "log.sensor.vehicle_detection_service.error"
        - name: RabbitMQ__RoutingKeys__Sensor__EmergencyError
          value: "log.sensor.emergency_vehicle_detection_service.error"
        - name: RabbitMQ__RoutingKeys__Sensor__PublicTransportError
          value: "log.sensor.public_transport_detection_service.error"
        - name: RabbitMQ__RoutingKeys__Sensor__PedestrianError
          value: "log.sensor.pedestrian_detection_service.error"
        - name: RabbitMQ__RoutingKeys__Sensor__CyclistError
          value: "log.sensor.cyclist_detection_service.error"
        - name: RabbitMQ__RoutingKeys__Sensor__IncidentError
          value: "log.sensor.incident_detection_service.error"

        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 15
          timeoutSeconds: 2
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 3
          failureThreshold: 3