services:
  log_api:
    ports:
      - '5005:8080'
    environment:
      # ASP.NET Core
      ASPNETCORE_ENVIRONMENT: Development

      # MongoDB
      DefaultConnection__ConnectionString: mongodb://mongo:mongo123@log_mongo:27017
      DefaultConnection__DatabaseName: LogDb
      DefaultConnection__AuditLogsCollectionName: audit_logs
      DefaultConnection__ErrorLogsCollectionName: error_logs

      # JWT
      Jwt__Issuer: http://stls_backend:8080
      Jwt__Audience: http://stls_backend:8080
      Jwt__Key: Nn7kLa8Rzv1XHt9UwMqP4YbFdJxVt2Km

      # RabbitMQ connection
      RabbitMQ__Host: rabbitmq
      RabbitMQ__Port: 5672
      RabbitMQ__Username: rabbitmq
      RabbitMQ__Password: rabbitmq123

      # Exchanges
      RabbitMQ__Exchanges__Logs: LOG.EXCHANGE
      RabbitMQ__Exchanges__User: USER.EXCHANGE
      RabbitMQ__Exchanges__Traffic: TRAFFIC.EXCHANGE
      RabbitMQ__Exchanges__Sensor: SENSOR.EXCHANGE

      # Consume from ...
      ## User Exchange
      RabbitMQ__Queues__UserLogs: user.log_service.queue
      RabbitMQ__RoutingKeys__UserAudit: log.user.{service_name}.audit
      RabbitMQ__RoutingKeys__UserError: log.user.{service_name}.error

      ## Traffic Exchange
      RabbitMQ__Queues__TrafficLogs: traffic.log_service.queue
      RabbitMQ__RoutingKeys__TrafficAudit: log.traffic.{service_name}.audit
      RabbitMQ__RoutingKeys__TrafficError: log.traffic.{service_name}.error

      ## Sensor Exchange
      RabbitMQ__Queues__SensorLogs: sensor.log_service.queue
      RabbitMQ__RoutingKeys__SensorAudit: log.sensor.{service_name}.audit
      RabbitMQ__RoutingKeys__SensorError: log.sensor.{service_name}.error

    depends_on:
      log_mongo:
        condition: service_started
    restart: always
