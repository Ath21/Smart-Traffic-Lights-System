services:
  traffic_light_coordinator_api:
    ports:
      - "5020:8080"
    environment:
      # ---- ASP.NET Core ----
      ASPNETCORE_ENVIRONMENT: Development

      # ---- DB connection (PostgreSQL) ----
      # Matches our code: ConnectionStrings:TrafficLightDb
      ConnectionStrings__DefaultConnection: Host=traffic_light_coordinator_postgres;Port=5432;Database=TrafficLightDb;Username=traffic;Password=traffic;Include Error Detail=true

      # ---- RabbitMQ connection ----
      RabbitMQ__Host: rabbitmq
      RabbitMQ__Username: admin
      RabbitMQ__Password: admin123

      # ---- Queues (the coordinator's receive queue) ----
      RabbitMQ__Queue__TrafficCoordinationQueue: traffic.light.coordination

      # ---- Topic Exchanges we SUBSCRIBE to (priority + congestion) ----
      RabbitMQ__Exchange__PriorityEmergencyVehicle: priority.emergency.vehicle
      RabbitMQ__Exchange__PriorityPublicTransport: priority.public.transport
      RabbitMQ__Exchange__PriorityPedestrian:      priority.pedestrian
      RabbitMQ__Exchange__PriorityCyclist:         priority.cyclist
      RabbitMQ__Exchange__TrafficAnalyticsCongestionAlert: traffic.analytics.congestion_alert

      # ---- Routing keys used on the receive bindings ----
      RabbitMQ__RoutingKey__PriorityEmergencyKey: "*"
      RabbitMQ__RoutingKey__PriorityPublicKey:    "*"
      RabbitMQ__RoutingKey__PriorityPedestrianKey: "*"
      RabbitMQ__RoutingKey__PriorityCyclistKey:   "*"
      RabbitMQ__RoutingKey__TrafficAnalyticsCongestionKey: "*"

      # ---- Exchange we PUBLISH to for light updates ----
      RabbitMQ__TrafficLightUpdateExchange: traffic.light.update

      # ---- Logs exchange + routing keys (used by TrafficLogPublisher) ----
      RabbitMQ__TrafficLogsExchange: traffic_light_coordinator.logs.exchange
      RabbitMQ__RoutingKeys__Audit:  traffic_light_coordinator.logs.audit
      RabbitMQ__RoutingKeys__Error:  traffic_light_coordinator.logs.error
      RabbitMQ__RoutingKeys__Info:   traffic_light_coordinator.logs.info

    depends_on:
      traffic_light_coordinator_postgres:
        condition: service_healthy
