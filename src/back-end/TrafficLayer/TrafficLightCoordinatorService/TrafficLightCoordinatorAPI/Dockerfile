# ðŸ”¹ Î’Î¬ÏƒÎ· runtime image (Î³Î¹Î± Ï„Î¿ Ï„ÎµÎ»Î¹ÎºÏŒ container)
FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS base
WORKDIR /app
EXPOSE 8080

RUN apt-get update && apt-get install -y libgssapi-krb5-2

# ðŸ”¹ Build stage
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src

COPY TrafficLayer TrafficLayer/

# ðŸ”¹ Restore
RUN dotnet restore TrafficLayer/TrafficLightCoordinatorService/TrafficLightCoordinatorAPI/TrafficLightCoordinatorStore/TrafficLightCoordinatorStore.csproj

# ðŸ”¹ Build
RUN dotnet build TrafficLayer/TrafficLightCoordinatorService/TrafficLightCoordinatorAPI/TrafficLightCoordinatorStore/TrafficLightCoordinatorStore.csproj -c $BUILD_CONFIGURATION -o /app/build

# ðŸ”¹ Publish
FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish TrafficLayer/TrafficLightCoordinatorService/TrafficLightCoordinatorAPI/TrafficLightCoordinatorStore/TrafficLightCoordinatorStore.csproj -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

# ðŸ”¹ Î¤ÎµÎ»Î¹ÎºÏŒ image
FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "TrafficLightCoordinatorStore.dll"]
