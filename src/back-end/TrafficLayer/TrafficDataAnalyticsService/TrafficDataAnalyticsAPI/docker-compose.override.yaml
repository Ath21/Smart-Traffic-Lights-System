version: "3.9"

services:
  traffic_analytics_api:
    ports:
      - "5208:8080"
    environment:
      # ASP.NET Core
      ASPNETCORE_ENVIRONMENT: Development

      # PostgreSQL
      ConnectionStrings__DefaultConnection: Host=traffic_analytics_postgres;Port=5432;Database=TrafficDataDb;Username=postgres;Password=postgres123!@#

      # JWT
      Jwt__Issuer: http://stls_backend:8080
      Jwt__Audience: http://stls_backend:8080
      Jwt__Key: Nn7kLa8Rzv1XHt9UwMqP4YbFdJxVt2Km

      # RabbitMQ
      RabbitMQ__Host: rabbitmq
      RabbitMQ__Port: 5672
      RabbitMQ__Username: admin
      RabbitMQ__Password: admin123

      # Exchanges
      RabbitMQ__Exchanges__Logs: logs.exchange
      RabbitMQ__Exchanges__Sensor: sensor.exchange
      RabbitMQ__Exchanges__Traffic: traffic.exchange

      # Queues
      RabbitMQ__Queues__Analytics: sensor.traffic_analytics_service.queue

      # Routing Keys
      RabbitMQ__RoutingKeys__VehicleCount: sensor.vehicle.count.*
      RabbitMQ__RoutingKeys__EmergencyVehicle: sensor.vehicle.emergency.*
      RabbitMQ__RoutingKeys__PublicTransport: sensor.public_transport.request.*
      RabbitMQ__RoutingKeys__Pedestrian: sensor.pedestrian.request.*
      RabbitMQ__RoutingKeys__Cyclist: sensor.cyclist.request.*
      RabbitMQ__RoutingKeys__IncidentDetected: sensor.incident.detected.*
      RabbitMQ__RoutingKeys__TrafficCongestionPrefix: traffic.analytics.congestion
      RabbitMQ__RoutingKeys__TrafficIncidentPrefix: traffic.analytics.incident
      RabbitMQ__RoutingKeys__TrafficSummaryPrefix: traffic.analytics.summary

    depends_on:
      traffic_analytics_postgres:
        condition: service_started
      rabbitmq:
        condition: service_started

    restart: always
