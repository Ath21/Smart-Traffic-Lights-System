services:
  traffic_light_controller_api:
    ports:
      - '5261:8080'
    environment:
      # ===============================
      # ASP.NET Core
      # ===============================
      ASPNETCORE_ENVIRONMENT: Development

      # ===============================
      # Databases
      # ===============================

      ## TrafficLightCacheDB (Redis)
      Redis__TrafficLight__Host: traffic_light_cache_db
      Redis__TrafficLight__Port: 6379
      Redis__TrafficLight__Password: ""
      Redis__TrafficLight__Database: 0
      Redis__TrafficLight__KeyPrefix__State: traffic_light:{intersection}.{light}:state
      Redis__TrafficLight__KeyPrefix__Duration: traffic_light:{intersection}.{light}:duration
      Redis__TrafficLight__KeyPrefix__LastUpdate: traffic_light:{intersection}.{light}:last_update
      Redis__TrafficLight__KeyPrefix__Priority: traffic_light:{intersection}.{light}:priority
      Redis__TrafficLight__KeyPrefix__QueueLength: traffic_light:{intersection}.{light}:queue_length

      # ===============================
      # CORS Policy
      # ===============================
      Cors__AllowedOrigins: http://localhost:5173
      Cors__AllowedMethods: GET,POST,PUT,PATCH,DELETE
      Cors__AllowedHeaders: Content-Type,Authorization

      # ===============================
      # JWT Authentication
      # ===============================
      Jwt__Issuer: http://stls_backend:8080
      Jwt__Audience: http://stls_backend:8080
      Jwt__Key: Nn7kLa8Rzv1XHt9UwMqP4YbFdJxVt2Km

      # ===============================
      # RabbitMQ Connection
      # ===============================
      RabbitMQ__Host: rabbitmq
      RabbitMQ__Port: 5672
      RabbitMQ__Username: rabbitmq
      RabbitMQ__Password: rabbitmq123

      # ===============================
      # RabbitMQ Exchanges
      # ===============================

      ## TRAFFIC.EXCHANGE
      RabbitMQ__Exchanges__Traffic: TRAFFIC.EXCHANGE
      # --- Consume
      RabbitMQ__Queues__Traffic__LightControl: traffic.light.controller.queue
      RabbitMQ__RoutingKeys__Traffic__LightControl: traffic.light.control.{intersection}.{light}

      ## LOG.EXCHANGE
      RabbitMQ__Exchanges__Log: LOG.EXCHANGE
      # --- Publish
      RabbitMQ__RoutingKeys__Log__Audit: log.traffic.light_controller.{intersection}.{light}.audit
      RabbitMQ__RoutingKeys__Log__Error: log.traffic.light_controller.{intersection}.{light}.error
      RabbitMQ__RoutingKeys__Log__Failover: log.traffic.light_controller.{intersection}.{light}.failover

    restart: always
